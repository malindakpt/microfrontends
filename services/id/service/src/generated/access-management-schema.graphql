input AuthenticateManagedServiceAccountInput {
  clientId: String!
  clientSecret: String!
}

input AuthenticateServiceAccountInput {
  tenantId: String!
  applicationId: String!
  clientId: String!
  clientSecret: String!
}

type AuthenticateServiceAccountPayload {
  """Access Token containing permissions of the Service Account"""
  accessToken: String!

  """Access Token type to use when making client requests"""
  tokenType: String!

  """Access Token expiration timeout"""
  expiresIn: Int!
}

"""
A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’
"""
input BooleanFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: Boolean

  """Not equal to the specified value."""
  notEqualTo: Boolean

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Boolean

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Boolean

  """Included in the specified list."""
  in: [Boolean!]

  """Not included in the specified list."""
  notIn: [Boolean!]

  """Less than the specified value."""
  lessThan: Boolean

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Boolean

  """Greater than the specified value."""
  greaterThan: Boolean

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Boolean
}

input CreateDevServiceAccountInput {
  serviceAccountName: String!
}

type CreateDevServiceAccountPayload {
  tenantId: String!
  applicationId: String!
  serviceAccountName: String!
  clientId: String!
  clientSecret: String!
}

"""All input for the create `ServiceAccount` mutation."""
input CreateServiceAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ServiceAccount` to be created by this mutation."""
  serviceAccount: ServiceAccountInput!
}

"""The output of our create `ServiceAccount` mutation."""
type CreateServiceAccountPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ServiceAccount` that was created by this mutation."""
  serviceAccount: ServiceAccount

  """An edge for our `ServiceAccount`. May be used by Relay 1."""
  serviceAccountEdge(
    """The method to use when ordering `ServiceAccount`."""
    orderBy: [ServiceAccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ServiceAccountsEdge
}

"""
All input for the create `ServiceAccountPermissionAssignment` mutation.
"""
input CreateServiceAccountPermissionAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The `ServiceAccountPermissionAssignment` to be created by this mutation.
  """
  serviceAccountPermissionAssignment: ServiceAccountPermissionAssignmentInput!
}

"""
The output of our create `ServiceAccountPermissionAssignment` mutation.
"""
type CreateServiceAccountPermissionAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  The `ServiceAccountPermissionAssignment` that was created by this mutation.
  """
  serviceAccountPermissionAssignment: ServiceAccountPermissionAssignment

  """
  Reads a single `ServiceAccount` that is related to this `ServiceAccountPermissionAssignment`.
  """
  serviceAccount: ServiceAccount

  """
  Reads a single `Permission` that is related to this `ServiceAccountPermissionAssignment`.
  """
  permission: Permission

  """
  An edge for our `ServiceAccountPermissionAssignment`. May be used by Relay 1.
  """
  serviceAccountPermissionAssignmentEdge(
    """The method to use when ordering `ServiceAccountPermissionAssignment`."""
    orderBy: [ServiceAccountPermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ServiceAccountPermissionAssignmentsEdge
}

"""All input for the create `Tag` mutation."""
input CreateTagInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Tag` to be created by this mutation."""
  tag: TagInput!
}

"""The output of our create `Tag` mutation."""
type CreateTagPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tag` that was created by this mutation."""
  tag: Tag

  """An edge for our `Tag`. May be used by Relay 1."""
  tagEdge(
    """The method to use when ordering `Tag`."""
    orderBy: [TagsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TagsEdge
}

"""All input for the create `User` mutation."""
input CreateUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `User` to be created by this mutation."""
  user: UserInput!
}

"""The output of our create `User` mutation."""
type CreateUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `User` that was created by this mutation."""
  user: User

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the create `UserRoleAssignment` mutation."""
input CreateUserRoleAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserRoleAssignment` to be created by this mutation."""
  userRoleAssignment: UserRoleAssignmentInput!
}

"""The output of our create `UserRoleAssignment` mutation."""
type CreateUserRoleAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRoleAssignment` that was created by this mutation."""
  userRoleAssignment: UserRoleAssignment

  """Reads a single `User` that is related to this `UserRoleAssignment`."""
  user: User

  """
  Reads a single `UserRole` that is related to this `UserRoleAssignment`.
  """
  userRole: UserRole

  """An edge for our `UserRoleAssignment`. May be used by Relay 1."""
  userRoleAssignmentEdge(
    """The method to use when ordering `UserRoleAssignment`."""
    orderBy: [UserRoleAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRoleAssignmentsEdge
}

"""All input for the create `UserRole` mutation."""
input CreateUserRoleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserRole` to be created by this mutation."""
  userRole: UserRoleInput!
}

"""All input for the create `UserRoleParentAssignment` mutation."""
input CreateUserRoleParentAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserRoleParentAssignment` to be created by this mutation."""
  userRoleParentAssignment: UserRoleParentAssignmentInput!
}

"""The output of our create `UserRoleParentAssignment` mutation."""
type CreateUserRoleParentAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRoleParentAssignment` that was created by this mutation."""
  userRoleParentAssignment: UserRoleParentAssignment

  """
  Reads a single `UserRole` that is related to this `UserRoleParentAssignment`.
  """
  parentUserRole: UserRole

  """An edge for our `UserRoleParentAssignment`. May be used by Relay 1."""
  userRoleParentAssignmentEdge(
    """The method to use when ordering `UserRoleParentAssignment`."""
    orderBy: [UserRoleParentAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRoleParentAssignmentsEdge
}

"""The output of our create `UserRole` mutation."""
type CreateUserRolePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRole` that was created by this mutation."""
  userRole: UserRole

  """An edge for our `UserRole`. May be used by Relay 1."""
  userRoleEdge(
    """The method to use when ordering `UserRole`."""
    orderBy: [UserRolesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRolesEdge
}

"""All input for the create `UserRolePermissionAssignment` mutation."""
input CreateUserRolePermissionAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserRolePermissionAssignment` to be created by this mutation."""
  userRolePermissionAssignment: UserRolePermissionAssignmentInput!
}

"""The output of our create `UserRolePermissionAssignment` mutation."""
type CreateUserRolePermissionAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRolePermissionAssignment` that was created by this mutation."""
  userRolePermissionAssignment: UserRolePermissionAssignment

  """
  Reads a single `UserRole` that is related to this `UserRolePermissionAssignment`.
  """
  userRole: UserRole

  """
  Reads a single `Permission` that is related to this `UserRolePermissionAssignment`.
  """
  permission: Permission

  """
  An edge for our `UserRolePermissionAssignment`. May be used by Relay 1.
  """
  userRolePermissionAssignmentEdge(
    """The method to use when ordering `UserRolePermissionAssignment`."""
    orderBy: [UserRolePermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRolePermissionAssignmentsEdge
}

"""All input for the create `UserRoleTagAssignment` mutation."""
input CreateUserRoleTagAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UserRoleTagAssignment` to be created by this mutation."""
  userRoleTagAssignment: UserRoleTagAssignmentInput!
}

"""The output of our create `UserRoleTagAssignment` mutation."""
type CreateUserRoleTagAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRoleTagAssignment` that was created by this mutation."""
  userRoleTagAssignment: UserRoleTagAssignment

  """
  Reads a single `UserRole` that is related to this `UserRoleTagAssignment`.
  """
  userRole: UserRole

  """Reads a single `Tag` that is related to this `UserRoleTagAssignment`."""
  tag: Tag

  """An edge for our `UserRoleTagAssignment`. May be used by Relay 1."""
  userRoleTagAssignmentEdge(
    """The method to use when ordering `UserRoleTagAssignment`."""
    orderBy: [UserRoleTagAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRoleTagAssignmentsEdge
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""
A point in time as described by the [ISO
8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
"""
scalar Datetime

"""
A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’
"""
input DatetimeFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: Datetime

  """Not equal to the specified value."""
  notEqualTo: Datetime

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Datetime

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Datetime

  """Included in the specified list."""
  in: [Datetime!]

  """Not included in the specified list."""
  notIn: [Datetime!]

  """Less than the specified value."""
  lessThan: Datetime

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Datetime

  """Greater than the specified value."""
  greaterThan: Datetime

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Datetime
}

"""All input for the `deleteServiceAccount` mutation."""
input DeleteServiceAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `ServiceAccount` mutation."""
type DeleteServiceAccountPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ServiceAccount` that was deleted by this mutation."""
  serviceAccount: ServiceAccount
  deletedServiceAccountNodeId: ID

  """An edge for our `ServiceAccount`. May be used by Relay 1."""
  serviceAccountEdge(
    """The method to use when ordering `ServiceAccount`."""
    orderBy: [ServiceAccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ServiceAccountsEdge
}

"""All input for the `deleteServiceAccountPermissionAssignment` mutation."""
input DeleteServiceAccountPermissionAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""
The output of our delete `ServiceAccountPermissionAssignment` mutation.
"""
type DeleteServiceAccountPermissionAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """
  The `ServiceAccountPermissionAssignment` that was deleted by this mutation.
  """
  serviceAccountPermissionAssignment: ServiceAccountPermissionAssignment
  deletedServiceAccountPermissionNodeId: ID

  """
  Reads a single `ServiceAccount` that is related to this `ServiceAccountPermissionAssignment`.
  """
  serviceAccount: ServiceAccount

  """
  Reads a single `Permission` that is related to this `ServiceAccountPermissionAssignment`.
  """
  permission: Permission

  """
  An edge for our `ServiceAccountPermissionAssignment`. May be used by Relay 1.
  """
  serviceAccountPermissionAssignmentEdge(
    """The method to use when ordering `ServiceAccountPermissionAssignment`."""
    orderBy: [ServiceAccountPermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ServiceAccountPermissionAssignmentsEdge
}

"""All input for the `deleteTag` mutation."""
input DeleteTagInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `Tag` mutation."""
type DeleteTagPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tag` that was deleted by this mutation."""
  tag: Tag
  deletedTagNodeId: ID

  """An edge for our `Tag`. May be used by Relay 1."""
  tagEdge(
    """The method to use when ordering `Tag`."""
    orderBy: [TagsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TagsEdge
}

"""All input for the `deleteUser` mutation."""
input DeleteUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `User` mutation."""
type DeleteUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `User` that was deleted by this mutation."""
  user: User
  deletedUserNodeId: ID

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the `deleteUserRoleAssignment` mutation."""
input DeleteUserRoleAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `UserRoleAssignment` mutation."""
type DeleteUserRoleAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRoleAssignment` that was deleted by this mutation."""
  userRoleAssignment: UserRoleAssignment
  deletedUserRoleAssignmentNodeId: ID

  """Reads a single `User` that is related to this `UserRoleAssignment`."""
  user: User

  """
  Reads a single `UserRole` that is related to this `UserRoleAssignment`.
  """
  userRole: UserRole

  """An edge for our `UserRoleAssignment`. May be used by Relay 1."""
  userRoleAssignmentEdge(
    """The method to use when ordering `UserRoleAssignment`."""
    orderBy: [UserRoleAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRoleAssignmentsEdge
}

"""All input for the `deleteUserRole` mutation."""
input DeleteUserRoleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""All input for the `deleteUserRoleParentAssignment` mutation."""
input DeleteUserRoleParentAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `UserRoleParentAssignment` mutation."""
type DeleteUserRoleParentAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRoleParentAssignment` that was deleted by this mutation."""
  userRoleParentAssignment: UserRoleParentAssignment
  deletedUserRoleParentNodeId: ID

  """
  Reads a single `UserRole` that is related to this `UserRoleParentAssignment`.
  """
  parentUserRole: UserRole

  """An edge for our `UserRoleParentAssignment`. May be used by Relay 1."""
  userRoleParentAssignmentEdge(
    """The method to use when ordering `UserRoleParentAssignment`."""
    orderBy: [UserRoleParentAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRoleParentAssignmentsEdge
}

"""The output of our delete `UserRole` mutation."""
type DeleteUserRolePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRole` that was deleted by this mutation."""
  userRole: UserRole
  deletedUserRoleNodeId: ID

  """An edge for our `UserRole`. May be used by Relay 1."""
  userRoleEdge(
    """The method to use when ordering `UserRole`."""
    orderBy: [UserRolesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRolesEdge
}

"""All input for the `deleteUserRolePermissionAssignment` mutation."""
input DeleteUserRolePermissionAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `UserRolePermissionAssignment` mutation."""
type DeleteUserRolePermissionAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRolePermissionAssignment` that was deleted by this mutation."""
  userRolePermissionAssignment: UserRolePermissionAssignment
  deletedUserRolePermissionNodeId: ID

  """
  Reads a single `UserRole` that is related to this `UserRolePermissionAssignment`.
  """
  userRole: UserRole

  """
  Reads a single `Permission` that is related to this `UserRolePermissionAssignment`.
  """
  permission: Permission

  """
  An edge for our `UserRolePermissionAssignment`. May be used by Relay 1.
  """
  userRolePermissionAssignmentEdge(
    """The method to use when ordering `UserRolePermissionAssignment`."""
    orderBy: [UserRolePermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRolePermissionAssignmentsEdge
}

"""All input for the `deleteUserRoleTagAssignment` mutation."""
input DeleteUserRoleTagAssignmentInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: UUID!
}

"""The output of our delete `UserRoleTagAssignment` mutation."""
type DeleteUserRoleTagAssignmentPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRoleTagAssignment` that was deleted by this mutation."""
  userRoleTagAssignment: UserRoleTagAssignment
  deletedUserRoleTagNodeId: ID

  """
  Reads a single `UserRole` that is related to this `UserRoleTagAssignment`.
  """
  userRole: UserRole

  """Reads a single `Tag` that is related to this `UserRoleTagAssignment`."""
  tag: Tag

  """An edge for our `UserRoleTagAssignment`. May be used by Relay 1."""
  userRoleTagAssignmentEdge(
    """The method to use when ordering `UserRoleTagAssignment`."""
    orderBy: [UserRoleTagAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRoleTagAssignmentsEdge
}

input DevPermissionStructureInput {
  serviceId: String!
  permissions: [String]
}

input GenerateDevAccessTokenInput {
  """
  Example:
  
  permissionStructure: [
    {
      serviceId: "media-service",
      permissions: ["ADMIN", "MOVIE_EDITOR"]
    },
    {
      serviceId: "video-service",
      permissions: ["ADMIN", "VIDEO_EDITOR"]
    }
  ]
  """
  permissionStructure: [DevPermissionStructureInput]

  """
  Example:
  
  tags: ["LK_MANAGER", "DE_MANAGER"]
  """
  tags: [String]
}

type GenerateDevAccessTokenPayload {
  accessToken: String!
  tokenType: String!
  expiresIn: Int!
}

input GenerateServiceAccountSecretInput {
  id: String!
}

type GenerateServiceAccountSecretPayload {
  serviceAccount: ServiceAccount

  """Generated client secret."""
  clientSecret: String!
}

"""
The root mutation type which contains root level fields which mutate data.
"""
type Mutation {
  """Creates a single `ServiceAccount`."""
  createServiceAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateServiceAccountInput!
  ): CreateServiceAccountPayload

  """Creates a single `ServiceAccountPermissionAssignment`."""
  createServiceAccountPermissionAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateServiceAccountPermissionAssignmentInput!
  ): CreateServiceAccountPermissionAssignmentPayload

  """Creates a single `Tag`."""
  createTag(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTagInput!
  ): CreateTagPayload

  """Creates a single `User`."""
  createUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserInput!
  ): CreateUserPayload

  """Creates a single `UserRole`."""
  createUserRole(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserRoleInput!
  ): CreateUserRolePayload

  """Creates a single `UserRoleAssignment`."""
  createUserRoleAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserRoleAssignmentInput!
  ): CreateUserRoleAssignmentPayload

  """Creates a single `UserRoleParentAssignment`."""
  createUserRoleParentAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserRoleParentAssignmentInput!
  ): CreateUserRoleParentAssignmentPayload

  """Creates a single `UserRolePermissionAssignment`."""
  createUserRolePermissionAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserRolePermissionAssignmentInput!
  ): CreateUserRolePermissionAssignmentPayload

  """Creates a single `UserRoleTagAssignment`."""
  createUserRoleTagAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserRoleTagAssignmentInput!
  ): CreateUserRoleTagAssignmentPayload

  """Updates a single `ServiceAccount` using a unique key and a patch."""
  updateServiceAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateServiceAccountInput!
  ): UpdateServiceAccountPayload

  """Updates a single `Tag` using a unique key and a patch."""
  updateTag(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTagInput!
  ): UpdateTagPayload

  """Updates a single `User` using a unique key and a patch."""
  updateUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserInput!
  ): UpdateUserPayload

  """Updates a single `UserRole` using a unique key and a patch."""
  updateUserRole(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserRoleInput!
  ): UpdateUserRolePayload

  """Deletes a single `ServiceAccount` using a unique key."""
  deleteServiceAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteServiceAccountInput!
  ): DeleteServiceAccountPayload

  """
  Deletes a single `ServiceAccountPermissionAssignment` using a unique key.
  """
  deleteServiceAccountPermissionAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteServiceAccountPermissionAssignmentInput!
  ): DeleteServiceAccountPermissionAssignmentPayload

  """Deletes a single `Tag` using a unique key."""
  deleteTag(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTagInput!
  ): DeleteTagPayload

  """Deletes a single `User` using a unique key."""
  deleteUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserInput!
  ): DeleteUserPayload

  """Deletes a single `UserRole` using a unique key."""
  deleteUserRole(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserRoleInput!
  ): DeleteUserRolePayload

  """Deletes a single `UserRoleAssignment` using a unique key."""
  deleteUserRoleAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserRoleAssignmentInput!
  ): DeleteUserRoleAssignmentPayload

  """Deletes a single `UserRoleParentAssignment` using a unique key."""
  deleteUserRoleParentAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserRoleParentAssignmentInput!
  ): DeleteUserRoleParentAssignmentPayload

  """Deletes a single `UserRolePermissionAssignment` using a unique key."""
  deleteUserRolePermissionAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserRolePermissionAssignmentInput!
  ): DeleteUserRolePermissionAssignmentPayload

  """Deletes a single `UserRoleTagAssignment` using a unique key."""
  deleteUserRoleTagAssignment(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserRoleTagAssignmentInput!
  ): DeleteUserRoleTagAssignmentPayload

  """
  Creates development-time tenant, application & idp-configuration basic data. Re-running will reset all data.
  """
  _DEV_setupIdBasicData(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: SetupDevBasicDataInput!
  ): SetupDevBasicDataPayload

  """
  Creates a development-time service account with SYNCHRONIZE_PERMISSIONS granted.
  """
  _DEV_createServiceAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDevServiceAccountInput!
  ): CreateDevServiceAccountPayload

  """
  Generates development-time user access tokens with specified PERMISSIONS.
  """
  _DEV_generateUserAccessToken(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: GenerateDevAccessTokenInput!
  ): GenerateDevAccessTokenPayload

  """Synchronizes permissions from other services."""
  synchronizePermissions(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: SynchronizePermissionsInput!
  ): SynchronizePermissionsPayload

  """Generates a new client secret for a `ServiceAccount`."""
  generateServiceAccountSecret(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: GenerateServiceAccountSecretInput!
  ): GenerateServiceAccountSecretPayload

  """Authenticates a Service Account"""
  authenticateServiceAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: AuthenticateServiceAccountInput
  ): AuthenticateServiceAccountPayload!

  """Authenticates a Managed Service Account"""
  authenticateManagedServiceAccount(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: AuthenticateManagedServiceAccountInput
  ): AuthenticateServiceAccountPayload!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor

  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

type Permission {
  id: UUID!
  serviceId: String!
  name: String!
  fromManagedService: Boolean!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads and enables pagination through a set of `UserRolePermissionAssignment`.
  """
  userRolePermissionAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRolePermissionAssignment`."""
    orderBy: [UserRolePermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRolePermissionAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRolePermissionAssignmentFilter
  ): UserRolePermissionAssignmentsConnection!

  """
  Reads and enables pagination through a set of `ServiceAccountPermissionAssignment`.
  """
  serviceAccountPermissionAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ServiceAccountPermissionAssignment`."""
    orderBy: [ServiceAccountPermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ServiceAccountPermissionAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceAccountPermissionAssignmentFilter
  ): ServiceAccountPermissionAssignmentsConnection!
}

"""
A condition to be used against `Permission` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input PermissionCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `serviceId` field."""
  serviceId: String

  """Checks for equality with the object’s `name` field."""
  name: String

  """Checks for equality with the object’s `fromManagedService` field."""
  fromManagedService: Boolean

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `Permission` object types. All fields are combined with a logical ‘and.’
"""
input PermissionFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `serviceId` field."""
  serviceId: StringFilter

  """Filter by the object’s `name` field."""
  name: StringFilter

  """Filter by the object’s `fromManagedService` field."""
  fromManagedService: BooleanFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `userRolePermissionAssignments` relation."""
  userRolePermissionAssignments: PermissionToManyUserRolePermissionAssignmentFilter

  """Some related `userRolePermissionAssignments` exist."""
  userRolePermissionAssignmentsExist: Boolean

  """Filter by the object’s `serviceAccountPermissionAssignments` relation."""
  serviceAccountPermissionAssignments: PermissionToManyServiceAccountPermissionAssignmentFilter

  """Some related `serviceAccountPermissionAssignments` exist."""
  serviceAccountPermissionAssignmentsExist: Boolean

  """Checks for all expressions in this list."""
  and: [PermissionFilter!]

  """Checks for any expressions in this list."""
  or: [PermissionFilter!]

  """Negates the expression."""
  not: PermissionFilter
}

"""A connection to a list of `Permission` values."""
type PermissionsConnection {
  """A list of `Permission` objects."""
  nodes: [Permission]!

  """
  A list of edges which contains the `Permission` and cursor to aid in pagination.
  """
  edges: [PermissionsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Permission` you could get from the connection."""
  totalCount: Int!
}

"""A `Permission` edge in the connection."""
type PermissionsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Permission` at the end of the edge."""
  node: Permission
}

"""Methods to use when ordering `Permission`."""
enum PermissionsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  SERVICE_ID_ASC
  SERVICE_ID_DESC
  NAME_ASC
  NAME_DESC
  FROM_MANAGED_SERVICE_ASC
  FROM_MANAGED_SERVICE_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A filter to be used against many `ServiceAccountPermissionAssignment` object
types. All fields are combined with a logical ‘and.’
"""
input PermissionToManyServiceAccountPermissionAssignmentFilter {
  """
  Every related `ServiceAccountPermissionAssignment` matches the filter
  criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceAccountPermissionAssignmentFilter

  """
  Some related `ServiceAccountPermissionAssignment` matches the filter criteria.
  All fields are combined with a logical ‘and.’
  """
  some: ServiceAccountPermissionAssignmentFilter

  """
  No related `ServiceAccountPermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceAccountPermissionAssignmentFilter
}

"""
A filter to be used against many `UserRolePermissionAssignment` object types. All fields are combined with a logical ‘and.’
"""
input PermissionToManyUserRolePermissionAssignmentFilter {
  """
  Every related `UserRolePermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRolePermissionAssignmentFilter

  """
  Some related `UserRolePermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRolePermissionAssignmentFilter

  """
  No related `UserRolePermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRolePermissionAssignmentFilter
}

"""The root query type which gives access points into the data universe."""
type Query {
  """
  Exposes the root query type nested one level down. This is helpful for Relay 1
  which can only query top level fields if they are in a particular form.
  """
  query: Query!

  """Reads and enables pagination through a set of `Permission`."""
  permissions(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Permission`."""
    orderBy: [PermissionsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PermissionCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: PermissionFilter
  ): PermissionsConnection

  """Reads and enables pagination through a set of `ServiceAccount`."""
  serviceAccounts(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ServiceAccount`."""
    orderBy: [ServiceAccountsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ServiceAccountCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceAccountFilter
  ): ServiceAccountsConnection

  """
  Reads and enables pagination through a set of `ServiceAccountPermissionAssignment`.
  """
  serviceAccountPermissionAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ServiceAccountPermissionAssignment`."""
    orderBy: [ServiceAccountPermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ServiceAccountPermissionAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceAccountPermissionAssignmentFilter
  ): ServiceAccountPermissionAssignmentsConnection

  """Reads and enables pagination through a set of `Tag`."""
  tags(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tag`."""
    orderBy: [TagsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TagCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: TagFilter
  ): TagsConnection

  """Reads and enables pagination through a set of `User`."""
  users(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserFilter
  ): UsersConnection

  """Reads and enables pagination through a set of `UserRole`."""
  userRoles(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRole`."""
    orderBy: [UserRolesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleFilter
  ): UserRolesConnection

  """Reads and enables pagination through a set of `UserRoleAssignment`."""
  userRoleAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleAssignment`."""
    orderBy: [UserRoleAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleAssignmentFilter
  ): UserRoleAssignmentsConnection

  """
  Reads and enables pagination through a set of `UserRoleParentAssignment`.
  """
  userRoleParentAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleParentAssignment`."""
    orderBy: [UserRoleParentAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleParentAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleParentAssignmentFilter
  ): UserRoleParentAssignmentsConnection

  """
  Reads and enables pagination through a set of `UserRolePermissionAssignment`.
  """
  userRolePermissionAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRolePermissionAssignment`."""
    orderBy: [UserRolePermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRolePermissionAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRolePermissionAssignmentFilter
  ): UserRolePermissionAssignmentsConnection

  """Reads and enables pagination through a set of `UserRoleTagAssignment`."""
  userRoleTagAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleTagAssignment`."""
    orderBy: [UserRoleTagAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleTagAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleTagAssignmentFilter
  ): UserRoleTagAssignmentsConnection
  permission(id: UUID!): Permission
  serviceAccount(id: UUID!): ServiceAccount
  serviceAccountPermissionAssignment(id: UUID!): ServiceAccountPermissionAssignment
  tag(id: UUID!): Tag
  user(id: UUID!): User
  userRole(id: UUID!): UserRole
  userRoleAssignment(id: UUID!): UserRoleAssignment
  userRoleParentAssignment(id: UUID!): UserRoleParentAssignment
  userRolePermissionAssignment(id: UUID!): UserRolePermissionAssignment
  userRoleTagAssignment(id: UUID!): UserRoleTagAssignment
}

type ServiceAccount {
  id: UUID!
  name: String!
  clientId: String!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads and enables pagination through a set of `ServiceAccountPermissionAssignment`.
  """
  serviceAccountPermissionAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ServiceAccountPermissionAssignment`."""
    orderBy: [ServiceAccountPermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ServiceAccountPermissionAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceAccountPermissionAssignmentFilter
  ): ServiceAccountPermissionAssignmentsConnection!
}

"""
A condition to be used against `ServiceAccount` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input ServiceAccountCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `name` field."""
  name: String

  """Checks for equality with the object’s `clientId` field."""
  clientId: String

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `ServiceAccount` object types. All fields are combined with a logical ‘and.’
"""
input ServiceAccountFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `name` field."""
  name: StringFilter

  """Filter by the object’s `clientId` field."""
  clientId: StringFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `serviceAccountPermissionAssignments` relation."""
  serviceAccountPermissionAssignments: ServiceAccountToManyServiceAccountPermissionAssignmentFilter

  """Some related `serviceAccountPermissionAssignments` exist."""
  serviceAccountPermissionAssignmentsExist: Boolean

  """Checks for all expressions in this list."""
  and: [ServiceAccountFilter!]

  """Checks for any expressions in this list."""
  or: [ServiceAccountFilter!]

  """Negates the expression."""
  not: ServiceAccountFilter
}

"""An input for mutations affecting `ServiceAccount`"""
input ServiceAccountInput {
  name: String!
}

"""
Represents an update to a `ServiceAccount`. Fields that are set will be updated.
"""
input ServiceAccountPatch {
  name: String
}

type ServiceAccountPermissionAssignment {
  id: UUID!
  serviceAccountId: UUID!
  permissionId: UUID!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads a single `ServiceAccount` that is related to this `ServiceAccountPermissionAssignment`.
  """
  serviceAccount: ServiceAccount

  """
  Reads a single `Permission` that is related to this `ServiceAccountPermissionAssignment`.
  """
  permission: Permission
}

"""
A condition to be used against `ServiceAccountPermissionAssignment` object
types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ServiceAccountPermissionAssignmentCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `serviceAccountId` field."""
  serviceAccountId: UUID

  """Checks for equality with the object’s `permissionId` field."""
  permissionId: UUID

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `ServiceAccountPermissionAssignment` object types. All fields are combined with a logical ‘and.’
"""
input ServiceAccountPermissionAssignmentFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `serviceAccountId` field."""
  serviceAccountId: UUIDFilter

  """Filter by the object’s `permissionId` field."""
  permissionId: UUIDFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `serviceAccount` relation."""
  serviceAccount: ServiceAccountFilter

  """Filter by the object’s `permission` relation."""
  permission: PermissionFilter

  """Checks for all expressions in this list."""
  and: [ServiceAccountPermissionAssignmentFilter!]

  """Checks for any expressions in this list."""
  or: [ServiceAccountPermissionAssignmentFilter!]

  """Negates the expression."""
  not: ServiceAccountPermissionAssignmentFilter
}

"""An input for mutations affecting `ServiceAccountPermissionAssignment`"""
input ServiceAccountPermissionAssignmentInput {
  serviceAccountId: UUID!
  permissionId: UUID!
}

"""A connection to a list of `ServiceAccountPermissionAssignment` values."""
type ServiceAccountPermissionAssignmentsConnection {
  """A list of `ServiceAccountPermissionAssignment` objects."""
  nodes: [ServiceAccountPermissionAssignment]!

  """
  A list of edges which contains the `ServiceAccountPermissionAssignment` and cursor to aid in pagination.
  """
  edges: [ServiceAccountPermissionAssignmentsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `ServiceAccountPermissionAssignment` you could get from the connection.
  """
  totalCount: Int!
}

"""A `ServiceAccountPermissionAssignment` edge in the connection."""
type ServiceAccountPermissionAssignmentsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ServiceAccountPermissionAssignment` at the end of the edge."""
  node: ServiceAccountPermissionAssignment
}

"""Methods to use when ordering `ServiceAccountPermissionAssignment`."""
enum ServiceAccountPermissionAssignmentsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  SERVICE_ACCOUNT_ID_ASC
  SERVICE_ACCOUNT_ID_DESC
  PERMISSION_ID_ASC
  PERMISSION_ID_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `ServiceAccount` values."""
type ServiceAccountsConnection {
  """A list of `ServiceAccount` objects."""
  nodes: [ServiceAccount]!

  """
  A list of edges which contains the `ServiceAccount` and cursor to aid in pagination.
  """
  edges: [ServiceAccountsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `ServiceAccount` you could get from the connection."""
  totalCount: Int!
}

"""A `ServiceAccount` edge in the connection."""
type ServiceAccountsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ServiceAccount` at the end of the edge."""
  node: ServiceAccount
}

"""Methods to use when ordering `ServiceAccount`."""
enum ServiceAccountsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  CLIENT_ID_ASC
  CLIENT_ID_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A filter to be used against many `ServiceAccountPermissionAssignment` object
types. All fields are combined with a logical ‘and.’
"""
input ServiceAccountToManyServiceAccountPermissionAssignmentFilter {
  """
  Every related `ServiceAccountPermissionAssignment` matches the filter
  criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceAccountPermissionAssignmentFilter

  """
  Some related `ServiceAccountPermissionAssignment` matches the filter criteria.
  All fields are combined with a logical ‘and.’
  """
  some: ServiceAccountPermissionAssignmentFilter

  """
  No related `ServiceAccountPermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceAccountPermissionAssignmentFilter
}

input SetupDevBasicDataInput {
  """
  Email given here will be setup as the tenant administrator email, as well as user administrator email.
  """
  adminEmail: String!

  """
  Password given here will be setup as the tenant administrator password.
  """
  adminPassword: String!

  """Google IDP Configuration - Client ID."""
  googleClientId: String!

  """Google IDP Configuration - Client Secret."""
  googleClientSecret: String!
}

type SetupDevBasicDataPayload {
  """Development Tenant ID to be used in ID Service integration."""
  tenantId: String!

  """Development Application ID to be used in ID Service integration."""
  applicationId: String!
}

"""
A filter to be used against String fields. All fields are combined with a logical ‘and.’
"""
input StringFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: String

  """Not equal to the specified value."""
  notEqualTo: String

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: String

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: String

  """Included in the specified list."""
  in: [String!]

  """Not included in the specified list."""
  notIn: [String!]

  """Less than the specified value."""
  lessThan: String

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: String

  """Greater than the specified value."""
  greaterThan: String

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: String

  """Contains the specified string (case-sensitive)."""
  includes: String

  """Does not contain the specified string (case-sensitive)."""
  notIncludes: String

  """Contains the specified string (case-insensitive)."""
  includesInsensitive: String

  """Does not contain the specified string (case-insensitive)."""
  notIncludesInsensitive: String

  """Starts with the specified string (case-sensitive)."""
  startsWith: String

  """Does not start with the specified string (case-sensitive)."""
  notStartsWith: String

  """Starts with the specified string (case-insensitive)."""
  startsWithInsensitive: String

  """Does not start with the specified string (case-insensitive)."""
  notStartsWithInsensitive: String

  """Ends with the specified string (case-sensitive)."""
  endsWith: String

  """Does not end with the specified string (case-sensitive)."""
  notEndsWith: String

  """Ends with the specified string (case-insensitive)."""
  endsWithInsensitive: String

  """Does not end with the specified string (case-insensitive)."""
  notEndsWithInsensitive: String

  """
  Matches the specified pattern (case-sensitive). An underscore (_) matches any
  single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  like: String

  """
  Does not match the specified pattern (case-sensitive). An underscore (_)
  matches any single character; a percent sign (%) matches any sequence of zero
  or more characters.
  """
  notLike: String

  """
  Matches the specified pattern (case-insensitive). An underscore (_) matches
  any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  likeInsensitive: String

  """
  Does not match the specified pattern (case-insensitive). An underscore (_)
  matches any single character; a percent sign (%) matches any sequence of zero
  or more characters.
  """
  notLikeInsensitive: String

  """
  Matches the specified pattern using the SQL standard's definition of a regular expression.
  """
  similarTo: String

  """
  Does not match the specified pattern using the SQL standard's definition of a regular expression.
  """
  notSimilarTo: String
}

input SynchronizePermissionsInput {
  serviceId: String!
  permissions: [String]!
}

type SynchronizePermissionsPayload {
  added: [String]
  removed: [String]
}

type Tag {
  id: UUID!
  name: String!
  description: String
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """Reads and enables pagination through a set of `UserRoleTagAssignment`."""
  userRoleTagAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleTagAssignment`."""
    orderBy: [UserRoleTagAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleTagAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleTagAssignmentFilter
  ): UserRoleTagAssignmentsConnection!
}

"""
A condition to be used against `Tag` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input TagCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `name` field."""
  name: String

  """Checks for equality with the object’s `description` field."""
  description: String

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `Tag` object types. All fields are combined with a logical ‘and.’
"""
input TagFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `name` field."""
  name: StringFilter

  """Filter by the object’s `description` field."""
  description: StringFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `userRoleTagAssignments` relation."""
  userRoleTagAssignments: TagToManyUserRoleTagAssignmentFilter

  """Some related `userRoleTagAssignments` exist."""
  userRoleTagAssignmentsExist: Boolean

  """Checks for all expressions in this list."""
  and: [TagFilter!]

  """Checks for any expressions in this list."""
  or: [TagFilter!]

  """Negates the expression."""
  not: TagFilter
}

"""An input for mutations affecting `Tag`"""
input TagInput {
  name: String!
  description: String
}

"""Represents an update to a `Tag`. Fields that are set will be updated."""
input TagPatch {
  name: String
  description: String
}

"""A connection to a list of `Tag` values."""
type TagsConnection {
  """A list of `Tag` objects."""
  nodes: [Tag]!

  """
  A list of edges which contains the `Tag` and cursor to aid in pagination.
  """
  edges: [TagsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Tag` you could get from the connection."""
  totalCount: Int!
}

"""A `Tag` edge in the connection."""
type TagsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Tag` at the end of the edge."""
  node: Tag
}

"""Methods to use when ordering `Tag`."""
enum TagsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A filter to be used against many `UserRoleTagAssignment` object types. All fields are combined with a logical ‘and.’
"""
input TagToManyUserRoleTagAssignmentFilter {
  """
  Every related `UserRoleTagAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRoleTagAssignmentFilter

  """
  Some related `UserRoleTagAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRoleTagAssignmentFilter

  """
  No related `UserRoleTagAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRoleTagAssignmentFilter
}

"""All input for the `updateServiceAccount` mutation."""
input UpdateServiceAccountInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ServiceAccount` being updated.
  """
  patch: ServiceAccountPatch!
  id: UUID!
}

"""The output of our update `ServiceAccount` mutation."""
type UpdateServiceAccountPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ServiceAccount` that was updated by this mutation."""
  serviceAccount: ServiceAccount

  """An edge for our `ServiceAccount`. May be used by Relay 1."""
  serviceAccountEdge(
    """The method to use when ordering `ServiceAccount`."""
    orderBy: [ServiceAccountsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ServiceAccountsEdge
}

"""All input for the `updateTag` mutation."""
input UpdateTagInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Tag` being updated.
  """
  patch: TagPatch!
  id: UUID!
}

"""The output of our update `Tag` mutation."""
type UpdateTagPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tag` that was updated by this mutation."""
  tag: Tag

  """An edge for our `Tag`. May be used by Relay 1."""
  tagEdge(
    """The method to use when ordering `Tag`."""
    orderBy: [TagsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TagsEdge
}

"""All input for the `updateUser` mutation."""
input UpdateUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `User` being updated.
  """
  patch: UserPatch!
  id: UUID!
}

"""The output of our update `User` mutation."""
type UpdateUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `User` that was updated by this mutation."""
  user: User

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the `updateUserRole` mutation."""
input UpdateUserRoleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `UserRole` being updated.
  """
  patch: UserRolePatch!
  id: UUID!
}

"""The output of our update `UserRole` mutation."""
type UpdateUserRolePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UserRole` that was updated by this mutation."""
  userRole: UserRole

  """An edge for our `UserRole`. May be used by Relay 1."""
  userRoleEdge(
    """The method to use when ordering `UserRole`."""
    orderBy: [UserRolesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UserRolesEdge
}

type User {
  id: UUID!
  name: String!
  profilePictureUrl: String
  email: String!
  status: UserStatus!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """Reads and enables pagination through a set of `UserRoleAssignment`."""
  userRoleAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleAssignment`."""
    orderBy: [UserRoleAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleAssignmentFilter
  ): UserRoleAssignmentsConnection!
}

"""
A condition to be used against `User` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input UserCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `name` field."""
  name: String

  """Checks for equality with the object’s `profilePictureUrl` field."""
  profilePictureUrl: String

  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `status` field."""
  status: UserStatus

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `User` object types. All fields are combined with a logical ‘and.’
"""
input UserFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `name` field."""
  name: StringFilter

  """Filter by the object’s `profilePictureUrl` field."""
  profilePictureUrl: StringFilter

  """Filter by the object’s `email` field."""
  email: StringFilter

  """Filter by the object’s `status` field."""
  status: UserStatusFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `userRoleAssignments` relation."""
  userRoleAssignments: UserToManyUserRoleAssignmentFilter

  """Some related `userRoleAssignments` exist."""
  userRoleAssignmentsExist: Boolean

  """Checks for all expressions in this list."""
  and: [UserFilter!]

  """Checks for any expressions in this list."""
  or: [UserFilter!]

  """Negates the expression."""
  not: UserFilter
}

"""An input for mutations affecting `User`"""
input UserInput {
  name: String!
  profilePictureUrl: String
  email: String!
  status: UserStatus
}

"""Represents an update to a `User`. Fields that are set will be updated."""
input UserPatch {
  status: UserStatus
}

type UserRole {
  id: UUID!
  name: String!
  description: String
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads and enables pagination through a set of `UserRoleParentAssignment`.
  """
  userRoleParentAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleParentAssignment`."""
    orderBy: [UserRoleParentAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleParentAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleParentAssignmentFilter
  ): UserRoleParentAssignmentsConnection!

  """Reads and enables pagination through a set of `UserRoleAssignment`."""
  userRoleAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleAssignment`."""
    orderBy: [UserRoleAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleAssignmentFilter
  ): UserRoleAssignmentsConnection!

  """Reads and enables pagination through a set of `UserRoleTagAssignment`."""
  userRoleTagAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRoleTagAssignment`."""
    orderBy: [UserRoleTagAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRoleTagAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRoleTagAssignmentFilter
  ): UserRoleTagAssignmentsConnection!

  """
  Reads and enables pagination through a set of `UserRolePermissionAssignment`.
  """
  userRolePermissionAssignments(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UserRolePermissionAssignment`."""
    orderBy: [UserRolePermissionAssignmentsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserRolePermissionAssignmentCondition

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UserRolePermissionAssignmentFilter
  ): UserRolePermissionAssignmentsConnection!
}

type UserRoleAssignment {
  id: UUID!
  userId: UUID!
  userRoleId: UUID!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """Reads a single `User` that is related to this `UserRoleAssignment`."""
  user: User

  """
  Reads a single `UserRole` that is related to this `UserRoleAssignment`.
  """
  userRole: UserRole
}

"""
A condition to be used against `UserRoleAssignment` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input UserRoleAssignmentCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `userId` field."""
  userId: UUID

  """Checks for equality with the object’s `userRoleId` field."""
  userRoleId: UUID

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `UserRoleAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleAssignmentFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `userId` field."""
  userId: UUIDFilter

  """Filter by the object’s `userRoleId` field."""
  userRoleId: UUIDFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `user` relation."""
  user: UserFilter

  """Filter by the object’s `userRole` relation."""
  userRole: UserRoleFilter

  """Checks for all expressions in this list."""
  and: [UserRoleAssignmentFilter!]

  """Checks for any expressions in this list."""
  or: [UserRoleAssignmentFilter!]

  """Negates the expression."""
  not: UserRoleAssignmentFilter
}

"""An input for mutations affecting `UserRoleAssignment`"""
input UserRoleAssignmentInput {
  userId: UUID!
  userRoleId: UUID!
}

"""A connection to a list of `UserRoleAssignment` values."""
type UserRoleAssignmentsConnection {
  """A list of `UserRoleAssignment` objects."""
  nodes: [UserRoleAssignment]!

  """
  A list of edges which contains the `UserRoleAssignment` and cursor to aid in pagination.
  """
  edges: [UserRoleAssignmentsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `UserRoleAssignment` you could get from the connection.
  """
  totalCount: Int!
}

"""A `UserRoleAssignment` edge in the connection."""
type UserRoleAssignmentsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserRoleAssignment` at the end of the edge."""
  node: UserRoleAssignment
}

"""Methods to use when ordering `UserRoleAssignment`."""
enum UserRoleAssignmentsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  USER_ROLE_ID_ASC
  USER_ROLE_ID_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `UserRole` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input UserRoleCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `name` field."""
  name: String

  """Checks for equality with the object’s `description` field."""
  description: String

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `UserRole` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `name` field."""
  name: StringFilter

  """Filter by the object’s `description` field."""
  description: StringFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `userRoleParentAssignments` relation."""
  userRoleParentAssignments: UserRoleToManyUserRoleParentAssignmentFilter

  """Some related `userRoleParentAssignments` exist."""
  userRoleParentAssignmentsExist: Boolean

  """Filter by the object’s `userRoleAssignments` relation."""
  userRoleAssignments: UserRoleToManyUserRoleAssignmentFilter

  """Some related `userRoleAssignments` exist."""
  userRoleAssignmentsExist: Boolean

  """Filter by the object’s `userRoleTagAssignments` relation."""
  userRoleTagAssignments: UserRoleToManyUserRoleTagAssignmentFilter

  """Some related `userRoleTagAssignments` exist."""
  userRoleTagAssignmentsExist: Boolean

  """Filter by the object’s `userRolePermissionAssignments` relation."""
  userRolePermissionAssignments: UserRoleToManyUserRolePermissionAssignmentFilter

  """Some related `userRolePermissionAssignments` exist."""
  userRolePermissionAssignmentsExist: Boolean

  """Checks for all expressions in this list."""
  and: [UserRoleFilter!]

  """Checks for any expressions in this list."""
  or: [UserRoleFilter!]

  """Negates the expression."""
  not: UserRoleFilter
}

"""An input for mutations affecting `UserRole`"""
input UserRoleInput {
  name: String!
  description: String
}

type UserRoleParentAssignment {
  id: UUID!
  userRoleId: UUID!
  parentUserRoleId: UUID!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads a single `UserRole` that is related to this `UserRoleParentAssignment`.
  """
  parentUserRole: UserRole
}

"""
A condition to be used against `UserRoleParentAssignment` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input UserRoleParentAssignmentCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `userRoleId` field."""
  userRoleId: UUID

  """Checks for equality with the object’s `parentUserRoleId` field."""
  parentUserRoleId: UUID

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `UserRoleParentAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleParentAssignmentFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `userRoleId` field."""
  userRoleId: UUIDFilter

  """Filter by the object’s `parentUserRoleId` field."""
  parentUserRoleId: UUIDFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `parentUserRole` relation."""
  parentUserRole: UserRoleFilter

  """Checks for all expressions in this list."""
  and: [UserRoleParentAssignmentFilter!]

  """Checks for any expressions in this list."""
  or: [UserRoleParentAssignmentFilter!]

  """Negates the expression."""
  not: UserRoleParentAssignmentFilter
}

"""An input for mutations affecting `UserRoleParentAssignment`"""
input UserRoleParentAssignmentInput {
  userRoleId: UUID!
  parentUserRoleId: UUID!
}

"""A connection to a list of `UserRoleParentAssignment` values."""
type UserRoleParentAssignmentsConnection {
  """A list of `UserRoleParentAssignment` objects."""
  nodes: [UserRoleParentAssignment]!

  """
  A list of edges which contains the `UserRoleParentAssignment` and cursor to aid in pagination.
  """
  edges: [UserRoleParentAssignmentsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `UserRoleParentAssignment` you could get from the connection.
  """
  totalCount: Int!
}

"""A `UserRoleParentAssignment` edge in the connection."""
type UserRoleParentAssignmentsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserRoleParentAssignment` at the end of the edge."""
  node: UserRoleParentAssignment
}

"""Methods to use when ordering `UserRoleParentAssignment`."""
enum UserRoleParentAssignmentsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ROLE_ID_ASC
  USER_ROLE_ID_DESC
  PARENT_USER_ROLE_ID_ASC
  PARENT_USER_ROLE_ID_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
Represents an update to a `UserRole`. Fields that are set will be updated.
"""
input UserRolePatch {
  name: String
  description: String
}

type UserRolePermissionAssignment {
  id: UUID!
  userRoleId: UUID!
  permissionId: UUID!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads a single `UserRole` that is related to this `UserRolePermissionAssignment`.
  """
  userRole: UserRole

  """
  Reads a single `Permission` that is related to this `UserRolePermissionAssignment`.
  """
  permission: Permission
}

"""
A condition to be used against `UserRolePermissionAssignment` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input UserRolePermissionAssignmentCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `userRoleId` field."""
  userRoleId: UUID

  """Checks for equality with the object’s `permissionId` field."""
  permissionId: UUID

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `UserRolePermissionAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRolePermissionAssignmentFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `userRoleId` field."""
  userRoleId: UUIDFilter

  """Filter by the object’s `permissionId` field."""
  permissionId: UUIDFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `userRole` relation."""
  userRole: UserRoleFilter

  """Filter by the object’s `permission` relation."""
  permission: PermissionFilter

  """Checks for all expressions in this list."""
  and: [UserRolePermissionAssignmentFilter!]

  """Checks for any expressions in this list."""
  or: [UserRolePermissionAssignmentFilter!]

  """Negates the expression."""
  not: UserRolePermissionAssignmentFilter
}

"""An input for mutations affecting `UserRolePermissionAssignment`"""
input UserRolePermissionAssignmentInput {
  userRoleId: UUID!
  permissionId: UUID!
}

"""A connection to a list of `UserRolePermissionAssignment` values."""
type UserRolePermissionAssignmentsConnection {
  """A list of `UserRolePermissionAssignment` objects."""
  nodes: [UserRolePermissionAssignment]!

  """
  A list of edges which contains the `UserRolePermissionAssignment` and cursor to aid in pagination.
  """
  edges: [UserRolePermissionAssignmentsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `UserRolePermissionAssignment` you could get from the connection.
  """
  totalCount: Int!
}

"""A `UserRolePermissionAssignment` edge in the connection."""
type UserRolePermissionAssignmentsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserRolePermissionAssignment` at the end of the edge."""
  node: UserRolePermissionAssignment
}

"""Methods to use when ordering `UserRolePermissionAssignment`."""
enum UserRolePermissionAssignmentsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ROLE_ID_ASC
  USER_ROLE_ID_DESC
  PERMISSION_ID_ASC
  PERMISSION_ID_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""A connection to a list of `UserRole` values."""
type UserRolesConnection {
  """A list of `UserRole` objects."""
  nodes: [UserRole]!

  """
  A list of edges which contains the `UserRole` and cursor to aid in pagination.
  """
  edges: [UserRolesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `UserRole` you could get from the connection."""
  totalCount: Int!
}

"""A `UserRole` edge in the connection."""
type UserRolesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserRole` at the end of the edge."""
  node: UserRole
}

"""Methods to use when ordering `UserRole`."""
enum UserRolesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type UserRoleTagAssignment {
  id: UUID!
  userRoleId: UUID!
  tagId: UUID!
  tenantId: UUID!
  applicationId: UUID!
  createdAt: Datetime!
  createdBy: String!
  updatedAt: Datetime!
  updatedBy: String!

  """
  Reads a single `UserRole` that is related to this `UserRoleTagAssignment`.
  """
  userRole: UserRole

  """Reads a single `Tag` that is related to this `UserRoleTagAssignment`."""
  tag: Tag
}

"""
A condition to be used against `UserRoleTagAssignment` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input UserRoleTagAssignmentCondition {
  """Checks for equality with the object’s `id` field."""
  id: UUID

  """Checks for equality with the object’s `userRoleId` field."""
  userRoleId: UUID

  """Checks for equality with the object’s `tagId` field."""
  tagId: UUID

  """Checks for equality with the object’s `tenantId` field."""
  tenantId: UUID

  """Checks for equality with the object’s `applicationId` field."""
  applicationId: UUID

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `createdBy` field."""
  createdBy: String

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `updatedBy` field."""
  updatedBy: String
}

"""
A filter to be used against `UserRoleTagAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleTagAssignmentFilter {
  """Filter by the object’s `id` field."""
  id: UUIDFilter

  """Filter by the object’s `userRoleId` field."""
  userRoleId: UUIDFilter

  """Filter by the object’s `tagId` field."""
  tagId: UUIDFilter

  """Filter by the object’s `tenantId` field."""
  tenantId: UUIDFilter

  """Filter by the object’s `applicationId` field."""
  applicationId: UUIDFilter

  """Filter by the object’s `createdAt` field."""
  createdAt: DatetimeFilter

  """Filter by the object’s `createdBy` field."""
  createdBy: StringFilter

  """Filter by the object’s `updatedAt` field."""
  updatedAt: DatetimeFilter

  """Filter by the object’s `updatedBy` field."""
  updatedBy: StringFilter

  """Filter by the object’s `userRole` relation."""
  userRole: UserRoleFilter

  """Filter by the object’s `tag` relation."""
  tag: TagFilter

  """Checks for all expressions in this list."""
  and: [UserRoleTagAssignmentFilter!]

  """Checks for any expressions in this list."""
  or: [UserRoleTagAssignmentFilter!]

  """Negates the expression."""
  not: UserRoleTagAssignmentFilter
}

"""An input for mutations affecting `UserRoleTagAssignment`"""
input UserRoleTagAssignmentInput {
  userRoleId: UUID!
  tagId: UUID!
}

"""A connection to a list of `UserRoleTagAssignment` values."""
type UserRoleTagAssignmentsConnection {
  """A list of `UserRoleTagAssignment` objects."""
  nodes: [UserRoleTagAssignment]!

  """
  A list of edges which contains the `UserRoleTagAssignment` and cursor to aid in pagination.
  """
  edges: [UserRoleTagAssignmentsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `UserRoleTagAssignment` you could get from the connection.
  """
  totalCount: Int!
}

"""A `UserRoleTagAssignment` edge in the connection."""
type UserRoleTagAssignmentsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UserRoleTagAssignment` at the end of the edge."""
  node: UserRoleTagAssignment
}

"""Methods to use when ordering `UserRoleTagAssignment`."""
enum UserRoleTagAssignmentsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ROLE_ID_ASC
  USER_ROLE_ID_DESC
  TAG_ID_ASC
  TAG_ID_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A filter to be used against many `UserRoleAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleToManyUserRoleAssignmentFilter {
  """
  Every related `UserRoleAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRoleAssignmentFilter

  """
  Some related `UserRoleAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRoleAssignmentFilter

  """
  No related `UserRoleAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRoleAssignmentFilter
}

"""
A filter to be used against many `UserRoleParentAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleToManyUserRoleParentAssignmentFilter {
  """
  Every related `UserRoleParentAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRoleParentAssignmentFilter

  """
  Some related `UserRoleParentAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRoleParentAssignmentFilter

  """
  No related `UserRoleParentAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRoleParentAssignmentFilter
}

"""
A filter to be used against many `UserRolePermissionAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleToManyUserRolePermissionAssignmentFilter {
  """
  Every related `UserRolePermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRolePermissionAssignmentFilter

  """
  Some related `UserRolePermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRolePermissionAssignmentFilter

  """
  No related `UserRolePermissionAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRolePermissionAssignmentFilter
}

"""
A filter to be used against many `UserRoleTagAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserRoleToManyUserRoleTagAssignmentFilter {
  """
  Every related `UserRoleTagAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRoleTagAssignmentFilter

  """
  Some related `UserRoleTagAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRoleTagAssignmentFilter

  """
  No related `UserRoleTagAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRoleTagAssignmentFilter
}

"""A connection to a list of `User` values."""
type UsersConnection {
  """A list of `User` objects."""
  nodes: [User]!

  """
  A list of edges which contains the `User` and cursor to aid in pagination.
  """
  edges: [UsersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `User` you could get from the connection."""
  totalCount: Int!
}

"""A `User` edge in the connection."""
type UsersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `User` at the end of the edge."""
  node: User
}

"""Methods to use when ordering `User`."""
enum UsersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  PROFILE_PICTURE_URL_ASC
  PROFILE_PICTURE_URL_DESC
  EMAIL_ASC
  EMAIL_DESC
  STATUS_ASC
  STATUS_DESC
  TENANT_ID_ASC
  TENANT_ID_DESC
  APPLICATION_ID_ASC
  APPLICATION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CREATED_BY_ASC
  CREATED_BY_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  UPDATED_BY_ASC
  UPDATED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

"""
A filter to be used against UserStatus fields. All fields are combined with a logical ‘and.’
"""
input UserStatusFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: UserStatus

  """Not equal to the specified value."""
  notEqualTo: UserStatus

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: UserStatus

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: UserStatus

  """Included in the specified list."""
  in: [UserStatus!]

  """Not included in the specified list."""
  notIn: [UserStatus!]

  """Less than the specified value."""
  lessThan: UserStatus

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: UserStatus

  """Greater than the specified value."""
  greaterThan: UserStatus

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: UserStatus
}

"""
A filter to be used against many `UserRoleAssignment` object types. All fields are combined with a logical ‘and.’
"""
input UserToManyUserRoleAssignmentFilter {
  """
  Every related `UserRoleAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UserRoleAssignmentFilter

  """
  Some related `UserRoleAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UserRoleAssignmentFilter

  """
  No related `UserRoleAssignment` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UserRoleAssignmentFilter
}

"""
A universally unique identifier as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122).
"""
scalar UUID

"""
A filter to be used against UUID fields. All fields are combined with a logical ‘and.’
"""
input UUIDFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: UUID

  """Not equal to the specified value."""
  notEqualTo: UUID

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: UUID

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: UUID

  """Included in the specified list."""
  in: [UUID!]

  """Not included in the specified list."""
  notIn: [UUID!]

  """Less than the specified value."""
  lessThan: UUID

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: UUID

  """Greater than the specified value."""
  greaterThan: UUID

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: UUID
}
